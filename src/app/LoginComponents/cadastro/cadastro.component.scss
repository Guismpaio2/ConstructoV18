/* src/app/features/auth/cadastro/cadastro.component.scss */

// Importa as variáveis e estilos globais.
@import "../../../styles/variables";
@import "../../../styles.scss";

// O componente é renderizado dentro do .auth-left-panel.
// Este wrapper principal garante que o conteúdo do formulário tenha a largura e o alinhamento corretos.
.cadastro-container-wrapper {
  display: flex;
  justify-content: center;
  width: 100%;
}

// Contém todo o formulário, desde o título até os botões.
.form-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 400px; // Largura máxima para o formulário, conforme a imagem.

  h2 {
    // O estilo do h2 já vem de _styles.scss.
    // Apenas ajustamos o espaçamento inferior.
    margin-bottom: $spacing-l;
    text-align: left;
  }

  form {
    display: flex;
    flex-direction: column;
    width: 100%;
    // Define um espaçamento consistente entre todos os elementos diretos do formulário.
    gap: $spacing-m;
  }
}

// Seção para upload da imagem de perfil.
.profile-image-upload {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $spacing-s; // Espaço entre o círculo e o botão "Adicionar Imagem".
  width: 100%;
  margin-bottom: $spacing-m; // Espaço extra antes do primeiro campo de input.

  .image-placeholder {
    width: 110px;
    height: 110px;
    border-radius: 50%;
    background-color: $color-primary-dark; // Cor de fundo do círculo, conforme a imagem.
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;

    .user-icon {
      width: 60px;
      height: 60px;
      // O ícone no HTML é um SVG, então podemos tentar mudar a cor dele.
      // Se for um SVG com 'fill="currentColor"', isso funcionará.
      // Se não, você pode precisar de um ícone branco ou usar um filtro.
      filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(93deg)
        brightness(103%) contrast(103%);
    }
  }

  // O estilo do botão .tertiary.small já está definido em _styles.scss.
  // Nenhum estilo adicional é necessário aqui.
}

// Os estilos para .form-group, label, input, .btn, .btn-cta, e .secondary
// já são fornecidos pelos seus arquivos globais _styles.scss e _variables.scss.
// A estrutura de classes no HTML é suficiente para que eles sejam aplicados corretamente.

// O botão "Já Possuo Conta" precisa de um ajuste de margem para se separar do botão "Próximo".
// Como ambos são filhos diretos do form com 'gap', o espaçamento já é aplicado.
// No entanto, se precisar de um ajuste fino, pode usar a classe.
.btn.secondary {
  // A classe .secondary já define a aparência.
  // O gap no formulário já cria o espaçamento.
  // Se o botão "Próximo" não estiver visível, pode ser necessário um margin-top.
  margin-top: -$spacing-xs; // Pequeno ajuste para aproximar os botões, se necessário.
}
